// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`destructuring array-assignment-function-block 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      function c() {
        var a = 1,
          b = 2;
      }

      ;
    },
    {},
  ]
})"
`;

exports[`destructuring array-basic 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var a = 1,
        b = '2',
        c = true;
      const d = 1,
        e = '2',
        f = true;
      let g = 1,
        h = '2',
        i = true;
    },
    {},
  ]
})"
`;

exports[`destructuring array-overflow 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var _ref = [1, '2', true, null, undefined, function() {}, Error, WebAssembly],
        a = _ref[0],
        b = _ref[1],
        c = _ref[2];
      var _ref2 = [1, '2', true, null, undefined, function() {}, Error, WebAssembly],
        d = _ref2[0],
        e = _ref2[1],
        f = _ref2[2];
      var _ref3 = [1, '2', true, null, undefined, function() {}, Error, WebAssembly],
        g = _ref3[0],
        h = _ref3[1],
        i = _ref3[2];
    },
    {},
  ]
})"
`;

exports[`destructuring array-rest-basic 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var a = 1,
        b = '2',
        c = [true, null, undefined, function() {}, Error, WebAssembly];
      const d = 1,
        e = '2',
        f = [true, null, undefined, function() {}, Error, WebAssembly];
      let g = 1,
        h = '2',
        i = [true, null, undefined, function() {}, Error, WebAssembly];
    },
    {},
  ]
})"
`;

exports[`destructuring array-rest-nested 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var a = 1,
        b = '2',
        c = [true, null, undefined],
        d = [function() {}, Error, WebAssembly];
    },
    {},
  ]
})"
`;

exports[`destructuring array-self-reference 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var d;
      var _ref = [1, a, b, d],
        a = _ref[0],
        b = _ref[1],
        c = _ref[2];
      var a = 1,
        b = \\"a\\",
        c = \\"b\\";
    },
    {},
  ]
})"
`;

exports[`destructuring object-basic 1`] = `
"(function(modules) {
  function require(id) {
    const [fn, mapping] = modules[id];

    function localRequire(name) {
      return require(mapping[name]);
    }

    const module = {
      exports: {}
    };

    fn(localRequire, module, module.exports);

    return module.exports;
  }

  require(0)
})({
  0: [
    function(require, module, exports) {
      var _a$b$c = {
          a: 1,
          b: '2',
          c: true
        },
        a = _a$b$c.a,
        b = _a$b$c.b,
        c = _a$b$c.c;
      var _d$e$f = {
          d: 1,
          e: '2',
          f: true
        },
        d = _d$e$f.d,
        e = _d$e$f.e,
        f = _d$e$f.f;
      var _g$h$i = {
          g: 1,
          h: '2',
          i: true
        },
        g = _g$h$i.g,
        h = _g$h$i.h,
        i = _g$h$i.i;
    },
    {},
  ]
})"
`;
